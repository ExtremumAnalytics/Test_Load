[
    "",
    "pagecontentDATA STRUCTURE nIN nPYTHON nInterview Questions n nBY VIKAS MAURYA nYOUTUBE n1 CODE WITH VIKAS n 2 VIKAS MAURYA ACADEMY metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 0 pagecontent1What is a Data Structure in python nThe Data Structure is a description of how data is organised stored modified and accessed By specifying nhow different sorts of data connect to one another it also develops relationships and forms algorithms The data nstructure of any computer languag e is a crucial concept in algorithmic design n n n2What Are the Various Data Structure Types nThe numerous forms of data structures are as follows n Lists Lists are a collection of related objects that are linked to the data items before and after them n Arrays Arrays are a collection of values with the same value n Stacks LIFO data structures or stacks are those in which the element placed last is access ed first n Queues Queues are a first infirstout data structure n Graphs In this data structure data values are stored in nodes connected by edges n Trees Like a linked list the data values are linked in a hierarchical structure n Hash table A table in which each value is assigned a key and then preserved making individual values nmore accessible n Heaps A binary tree data structure that allows you to compare parent and child data values n3What Applications Do Data Structures Have nData structures are u seful for a number of things including n Dynamic memory allocation should be implemented n Model sets and other types of data n Network modelling n Identifying and resolving the most basic issues n4 Give three reasons why NumPy arrays are better than Python lists nThis is a popular Python data structure interview question Arrays in NumPy have three advantages over Python nlists n It is more efficient to use a NumPy array The NumPy arrays continue to grow in size It has the npotential to be thirty times faster than Python lists n NumPy is a programming language that is both faster and easier to use It comes with a number of free nvector and matrix operations that help you save time and effort They can also be carried out nsuccessfu lly n Finally Python lists have several limitations such as the inability to perform element wise addition nmultiplication and other vectorized operations Python must also keep type information for each entry nbecause lists contain a variety of objects Arrays on the other hand have homogeneous objects and nhence do not have these restrictions metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 1 pagecontent5What are tuples and lists What is the main distinction between the two nLists and Tuples are sequence data structures in Python that can store a collection of i tems Both sequences are ncapable of storing items of various data types Parantheses are used to represent tuples ansh 5 097 while nsquare brackets are used to represent lists sara 6 019 nThe fundamental difference between the two is that lis ts are mutable objects but tuples are not Tuples are fixed nand cannot be modified in any way despite the fact that lists can be changed appended or sliced on the fly nRun the following example in Python IDLE to see the difference nmytuple sara 6 5 097 nmylist sara 6 5 097 nprint mytuple 0 output sara nprint mylist 0 output sara nmytuple 0 ansh modifying tuple throws an error nmylist 0 ansh modifying list list modified nprint mytuple 0 output sara nprint mylist 0 output ansh n6What is the distinction between Python Arrays and Python Lists n Arrays in Python can only include components of the same data type hence the data type of the array nmust be homogeneous Its a small wrapper for C language arrays that utilises a fraction of the memory nof lists n Lists in Python can contain components of several data types making list data types heterogeneous nimport array na array array i 1 2 3 nfor i in a n print i end OUTPUT 1 2 3 na array array i 1 2 string OUTPUT TypeError an integer is required got type str na 1 2 string nfor i in a n print i end OUTPUT 1 2 string n n n7What exactly do you mean when you say NumPy nNumPy is an open source python based general purpose tool for processing arrays that is extensively used nsimple to use versatile and widely used NumPy is the abbreviation for NUMerical Python This software is nwellknown for its highly optimised tools wh ich result in increased speed and a powerful N Dimensional array nprocessing function which is designed specifically for working with complex arrays Due to its popularity and npowerful performance as well as its versatility to conduct various operations s uch as trigonometric operations nalgebraic and statistical computations it is most often employed in scientific computations and for a variety of nbroadcasting purposes n8What are the advantages of NumPy arrays versus Python lists metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 2 pagecontent The list data structure in Python is incredibly efficient and capable of handling a wide range of jobs nThey do however have substantial limits when it comes to computing vectorized operations like nelement wise multiplication and addition The type of each element is also requ ired by the python lists nwhich adds overhead because type dispatching code is called every time an action on any element is nperformed This is where NumPy arrays come into play as they manage all of Python lists limitations n Furthermore when the size o f the NumPy arrays grows larger NumPy becomes 30x faster than Python nList This is due to the homogeneous nature of Numpy arrays which causes them to be densely packed nin memory This protects the memory n9What stages are involved in creating 1D 2D an d 3D arrays n 1D array creation n import numpy as np n onedimensionallist 124 n onedimensionalarr nparray onedimensionallist n print 1D array is onedimensionalarr n n n 2D array creation n import numpy as np n twodimensionallist 123456 n twodimensionalarr nparray twodimensionallist n print 2D array is twodimensionalarr n n n 3D array creation n import numpy as np n threedimensionallist 123456789 n threedimensionalarr nparray threedimensionallist n print 3D array is threedimensionalarr n10 In Python explain slicing nSlicing is a technique for extracting a subset of elements from a sequence type like a list tuple or string For nexample slicing a list refers to selecting a section or subset of the list for a function while keeping the rest of nthe list unaltered As a result you can take out a section without affecting the remainder of the material nThe following is the syntax for slicing a list List name startstopsteps n n11 In Python explain the differences between xrange and range metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 3 pagecontentDespite the fact that both x range and range produce a sequence of numbers they are not the same Range nproduces a Python list of integers whereas xrange generates an xrange generator object As a result xrange ndoes not construct a static list instead the value is created a s needed n n13What is the difference between linear and non linear data structure nA data structure that stores data in a linear order is known as a linear data structure You can only traverse the ndata structure using that linear series Arrays and stacks are examples of linear data structures nData is organised in non linear ways with non linear data structures For example a graph is made up of nodes nconnected by edges The edges that connect the nodes not the order in which they are joined determine the nrelationships between the data values Trees are examples of non linear data structures n14What exactly is a stack nA stack is an abstract data type that provides a linear data structure analogous to a physical stack or pile where nobjects may only be removed from the top As a result item insertion push and deletion pop take place only nat one end of the stack the top of the stack and in a certain order LIFO Last In First Out or FILO First In nLast Out First In Last Out nImplementation in Python nstack n n append function to push n element in the stack nstack append a nstack append b nstack append c n nprint Initial stack nprint stack n n pop function to pop n element from stack in n LIFO order nprint nElements popped from stack nprint stack pop nprint stack pop nprint stack pop n nprint nStack after elements are popped nprint stack n n uncommenting printstackpop n will cause an IndexError n as the stack is now empty metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 4 pagecontent15 What operations can you do with a stack nA stack is a linear data structure that works on the same idea as a list except that in a stack components are nonly added and deleted from one end the TOP As a result a stack is known as a LIFO Last InFirstOut data nstructure because the last component inserted is the first component removed nA stack can carry out three basic operations n n1 PUSH When you use the push action a new element is added to the stack The new function is at the top of nthe priority list However before we insert the value we must first verify if TOPMAX 1 since if it is the nstack is filled and no more insertions are possible n2 POP To remove the topmost member of a stack use the pop action We must first verify if TOPNULL nbefore deleting the item because if it is the stack is empty and no further deletions are permitted Youll get a nUNDERFLOW notice if you try to remove a value from a stack that is already empty n n16What is the definition of a queue Data Structure nThe FIFO action is used to retrieve queue entries which is an abstract data type that specifies a linear data nstructure or an ordered list Only one end referred to as REAR is allowed to insert data while the other end nreferred to as FRONT is only allowed to delete data n17 List a few uses for the queue Data Structure nConsider the following job prioritisation scenarios n Waiting lists for a single shared resource such as a printer CPU call centre systems or photo uploads nin which the first one to arrive is processed first n Asynchronous data transfer is exemplified b y pipes file IO and sockets n As buffers in applications such as MP3 players and CD players n To keep the media players playlists up to date to add or remove the songs n n18What is the definition of a doubly linked list Give some specific examples nIts a type of linked list double ended LL in which each node has two links one to the next node in the nsequence and the other to the previous node in the series This allows traversal of the data elements in both ndirections nHere are several examples n A mus ic playlist with next and previous track navigation options n RECENTLY VISITED PAGES IN THE BROWSER CACH n Undo and redo functions in the browser which let you to return to a previous page by reversing the nnode n19In Python how do you randomise the entrie s in a list while its running nConsider the following scenario metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 5 pagecontentfrom random import shuffle nx Keep The Blue Flag Flying High nshuffle x nprint x n n nThe following code produces the following result nFlying Keep Blue High The Flag n20 In Python what is a dictionary nTOne of Pythons built in datatypes is the dictionary datatype It creates a one toone relationship between keys nand values A dictionary entry consists of two keys and associated values Dictiona ry indexing is done via keys n nConsider the case below nThe sample below has a few keys The Prime Minister the Country and the Capital India Delhi and Modi are nall values that are mutually exclusive ndictCountry India Capital Delhi PMModi nprint dictCountry n n nOutputIndia n21 What are the benefits of NumPy arrays over nested Python lists n1 Pythons lists are versatile containers that can be used for a number of tasks They make insertion deletion nappending and concatenation relatively rapid and Pythons list comprehensions make them straightforward to ncreate and use n2 They have several limitations they dont support vectorized operations like elementwise addition and nmultiplication and because they can contain objects of various types Python must store type information for neach element and perform type dispatching code when working on it n3 NumPy is not only more efficient but its also easier to use You get a number of vector and matrix noperations f or free which might save you time by avoiding unnecessary effort They are also applied neffectively n4 NumPy arrays are faster and NumPy includes a variety of tools including as FFTs convolutions fast nsearching basic statistics linear algebra hist ograms and more n22 In Python how do you add values to an array nThe append extend and insert ix procedures can be used to add elements to an array naarrarray d 11 21 31 naappend 34 nprint a naextend 456368 nprint a nainsert 238 metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 6 pagecontentprint a n n nOutput narrayd 11 21 31 34 narrayd 11 21 31 34 45 63 68 arrayd 11 21 38 31 34 45 63 68 n23 Whats the best way to remove values from a Python array nThe pop and remove methods can be used to remove elements from an array The difference between these ntwo functions is that the first returns the removed value while the second does not naarrarray d 11 22 38 31 37 12 46 nprint apop nprint apop3 naremove 11 nprint a n n n24Write a program in Python to execute the Bubble sort algorithm ndef bsa n a name of list n blena1nbsp n minus 1 because we always compare 2 adjacent values n for x in range b n for y in range bx n ayay1 n n a3253675487 n bsa n n n25 What are the benefits of using a heap instead of a stack nHere are some examples of how to use heap over stack n The heap is more versatile than the stack because memory space can be dynamically created and de nallocated as needed n Stack variables are only visible to the user as private memory but things created in the heap are visible nto all threads n When using recursion heap memory grows in size whereas stack memory soon fills up n26What is the mechanism behind the Selection sort nThe smallest number f rom the list is repeatedly selected in ascending order and placed at the top of the selection nsort This operation is repeated as you get closer to the end of the list or sorted subarray metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 7 pagecontentScan through all of the items to find the tiniest one The first ite m in the position should be replaced Every time nwe iterate forward I from 0 to N 1 we swap with the smallest element always i nTime complexity best case On2 worst On2 nSpace complexity worst O1 n27 What examples of divide andconquer algorithms can you give nQuicksort is the name of the sorting algorithm The method selects a pivot element and rearranges the array ncomponents so that all items less important than the pivot element are moved to the left side and all elements nmore important than the pivot element are moved to the right side n nMergeSort is a sorting algorithm as well The algorithm divides the array into two halves sorts them in a nrecursive manner and then connects the two halves The purpose of points that are closest together is to locate nthe nearest pair of points in an x y plane collection of points The problem can be solved in On2 time by ncomputing the distances between each pair of locations and comparing them to find the shortest distance n28 What is Graph Data Structure nIts a non linear data structure that stores and retrieves data by connecting vertices or nodes with edges or arcs nEdges are divided into two categories directed and undirected nUsing a dictionary with the names of each vertex as the key and the edges l ist as the values is the best way to nimplement graphs in Python n Create the dictionary with graph elements ngraph a bc n b a d n c a d n d e n e d n n n Print the graph nprint graph n n n29What are some examples of graph Data Structure applications n In transport grids stations are represented as vertices and routes are represented as graph edges n Vertices represent connection locations while edges represent the wires or pipes that connect them in a npower or water utility graph n Use social network graphs to determine the flow of information and hotspots edges and vertices n In neural networks the vertices represent neurons while the edges represent synapses between them n30 What are the different kinds of trees metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 8 pagecontent The Generic Tree A generic tree is one whose hierarchy isnt restricted All other trees are subsets of nthe General Tree which can hav e an endless number of progeny n n The binary tree is a type of tree in which each parent has at least two offspring The left and right nyoungsters are referred to as the left and right youngsters The name of this tree is more well known nthan that of the others When a Binary tree is give n specific restrictions and features trees like the AVL ntree BST Binary Search Tree RBT tree and others are utilised n n BST Binary Search Tree is a binary tree extension with a variety of constraints In BST a nodes left nchild value must be less t han or equal to the parent value whereas the correct child value must always nbe larger than or equal to the parents value n n AVL Tree Adelson Velshi and Landis the two inventors are represented by the initials AVL This nwas the first tree to achieve d ynamic equilibrium Each node is given a balancing factor based on nwhether the AVL tree is balanced or not The node kids can only reach a maximum height of one AVL nvine n n Red and Black Tree The red black tree is another type of auto balancing tree The t erm red black is nderived from the characteristics of a red black tree which has red or black painted on each node It ncontributes to the forests overall balance Even though this tree isnt perfectly balanced the search nmethod takes only O log n time n n Nary Tree In this sort of tree with a node the maximum number of children is N A binary tree is a ntwoyear tree since each binary tree node has just two offspring A full N ary tree is one where each nnodes children are either 0 or N n31 What are the distinctions between the B and B trees nThe B tree is a self balancing m way tree with m denoting the trees order Btree is an extension of the Binary nSearch tree in which depending on the number of m a node can contain more than one key and more than two nchildren The data is organised in a B tree with lower values on the left and higher values on the right subtrees nThe B tree is an advanced self balanced tree since every path from the trees root to its leaf is the same length nThe leaf nodes all occur at the same level since they are all the same length At the third level some leaf nodes nare not permitted to develop while others are permitted n32 Whats the difference between a BFS Breadth First Search and a DFS Depth First nSearch n1BFS and DFS are two graph traversing algorithms Graph traversal is the process of visiting all of the nodes in na graph n2 BFS examines level by level whereas DFS takes a path from the start to the end node then another path from nthe start to the end an d so on until all nodes have been visited n3 In addition BFS uses a queue data structure to store nodes whereas DFS uses a stack data structure to nimplement node traversal metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 9 pagecontent4 DFS produces deeper non optimal answers but it works well when the solution is dense whereas BFS nproduces ideal solutions n33 What is Linked List Implement linked list in python nLinked lists are a sort of data structure in which each data node has a relational pointer that connects it to the nnext node in the list nUnlike arra ys linked lists do not have objective positions in the list They have relative positions instead which nare determined by the nodes in their immediate surroundings nIn a linked list the head node is the first node and the tail node which has a null po inter is the last n nThe linked list is either singularly or doubly linked depending on whether each node has a single pointer to the nnext node or a second pointer to the previous node Individual links in linked lists are similar to those in a chain nin that they only connect to their immediate neighbours but when all of the links are combined together they nform a larger structure nYoull need to develop a Node class to hold a data value and one or more pointers because Python doesnt have na built in imp lementation of linked lists nclass Node n def init self dataval None n selfdataval dataval n selfnextval None n nclass SLinkedList n def init self n selfheadval None n nlist1 SLinkedList nlist1headval Node Mon ne2 Node Tue ne3 Node Wed n Link first Node to second node nlist1headval nextval e2 n n Link second Node to third node ne2nextval e3 n n n34 What are some of the uses of the graph data structure nThe graph can be used for the following purposes n In circuit networks vertices are shown as points of connection and component cables are drawn as nedges of the graph n In transportation networks stations are shown as vertices while routes are drawn as edges of the graph n Citiesstate sregions are drawn as vertices on maps while adjacency relations are drawn as edges metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 10 pagecontent Procedures or modules are treated as vertices in programme flow analysis and calls to these procedures nare shown as edges of the graph n35 What are some of the uses of the Tree data structure nTreedata structure applications include n The art of manipulating arithmetic expressions n Construction of the Symbol Table n Analyze the syntax n Hierarchal data model n n n36 Write a programme to generate a third list l3 from two lists l1 and l2 by selecting an noddindex element from l1 and even index elements from l2 nTo access a range of items in a list use the slicing operator With this operator you can specify where to start nthe slicing end and specify the step nlist1 3 6 9 12 15 18 21 nlist2 4 8 12 16 20 24 28 nres list n noddelements list112 nprint Element at odd index positions from list one nprint oddelements n nevenelements list202 nprint Element at even index positions from list two nprint evenelements n nprint Printing Final third list nresextend oddelements nresextend evenelements nprint res metadatasource CUsersAsifAppDataLocalTemptmpc723tr2 page 11"
]